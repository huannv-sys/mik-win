@model List<mikk_mmc_web.Models.NetworkInterface>
@{
    ViewData["Title"] = "Giao Diện Mạng";
}

<h1>Giao Diện Mạng</h1>
<p class="lead">Quản lý và giám sát các giao diện mạng của router</p>

<div class="alert alert-info">
    <i class="bi bi-info-circle"></i> Các giao diện được cập nhật tự động mỗi 60 giây
</div>

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Tên</th>
                <th>Loại</th>
                <th>Trạng Thái</th>
                <th>Địa Chỉ MAC</th>
                <th>Địa Chỉ IP</th>
                <th>Tốc Độ</th>
                <th>Lưu Lượng (TX/RX)</th>
                <th>Thao Tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var iface in Model)
            {
                string statusClass = iface.Status == "up" ? "bg-success" : "bg-danger";
                <tr>
                    <td>@iface.Name</td>
                    <td>@iface.Type</td>
                    <td>
                        <span class="badge @statusClass">@iface.Status</span>
                    </td>
                    <td>@iface.MacAddress</td>
                    <td>@iface.IpAddress</td>
                    <td>@iface.Speed</td>
                    <td>@iface.TxRx</td>
                    <td>
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#trafficModal" data-interface="@iface.Name">
                                <i class="bi bi-graph-up"></i> Lưu Lượng
                            </button>
                            <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#configModal" data-interface="@iface.Name">
                                <i class="bi bi-gear"></i> Cấu Hình
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Traffic Modal -->
<div class="modal fade" id="trafficModal" tabindex="-1" aria-labelledby="trafficModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="trafficModalLabel">Lưu Lượng Giao Diện</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center mb-3">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p>Đang tải dữ liệu lưu lượng...</p>
                </div>
                <div id="trafficData" class="d-none">
                    <ul class="list-group mb-3">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Tổng dữ liệu gửi:
                            <span id="txBytes" class="badge bg-primary rounded-pill">0</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Tổng dữ liệu nhận:
                            <span id="rxBytes" class="badge bg-success rounded-pill">0</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Tổng gói tin gửi:
                            <span id="txPackets" class="badge bg-info rounded-pill">0</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Tổng gói tin nhận:
                            <span id="rxPackets" class="badge bg-warning rounded-pill">0</span>
                        </li>
                    </ul>
                    <div class="card">
                        <div class="card-header">
                            Biểu Đồ Lưu Lượng Dữ Liệu
                        </div>
                        <div class="card-body">
                            <canvas id="trafficChart" width="400" height="200"></canvas>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Config Modal -->
<div class="modal fade" id="configModal" tabindex="-1" aria-labelledby="configModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="configModalLabel">Cấu Hình Giao Diện</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="interfaceConfigForm">
                    <div class="mb-3">
                        <label for="interfaceName" class="form-label">Tên Giao Diện</label>
                        <input type="text" class="form-control" id="interfaceName" readonly>
                    </div>
                    <div class="mb-3">
                        <label for="interfaceStatus" class="form-label">Trạng Thái</label>
                        <select class="form-select" id="interfaceStatus">
                            <option value="up">Bật (up)</option>
                            <option value="down">Tắt (down)</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="interfaceIp" class="form-label">Địa Chỉ IP</label>
                        <input type="text" class="form-control" id="interfaceIp" placeholder="192.168.1.1/24">
                    </div>
                    <div class="mb-3">
                        <label for="interfaceComment" class="form-label">Ghi Chú</label>
                        <textarea class="form-control" id="interfaceComment" rows="2"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveInterfaceConfig">Lưu Thay Đổi</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Xử lý modal traffic
    var trafficModal = document.getElementById('trafficModal');
    var trafficChart;
    
    trafficModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var interfaceName = button.getAttribute('data-interface');
        var modalTitle = trafficModal.querySelector('.modal-title');
        modalTitle.textContent = 'Lưu Lượng Giao Diện: ' + interfaceName;
        
        // Hiển thị spinner và ẩn dữ liệu
        document.querySelector('#trafficData').classList.add('d-none');
        
        // Lấy dữ liệu từ API
        fetch('/api/Network/traffic/' + interfaceName)
            .then(response => response.json())
            .then(data => {
                // Cập nhật dữ liệu
                document.querySelector('#txBytes').textContent = formatBytes(data.txBytes);
                document.querySelector('#rxBytes').textContent = formatBytes(data.rxBytes);
                document.querySelector('#txPackets').textContent = data.txPackets.toLocaleString();
                document.querySelector('#rxPackets').textContent = data.rxPackets.toLocaleString();
                
                // Vẽ biểu đồ
                var ctx = document.getElementById('trafficChart').getContext('2d');
                
                if (trafficChart) {
                    trafficChart.destroy();
                }
                
                trafficChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['Dữ liệu Gửi', 'Dữ liệu Nhận'],
                        datasets: [{
                            label: 'Lưu lượng dữ liệu (MB)',
                            data: [data.txBytes / (1024 * 1024), data.rxBytes / (1024 * 1024)],
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.5)',
                                'rgba(75, 192, 192, 0.5)'
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(75, 192, 192, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'MB'
                                }
                            }
                        }
                    }
                });
                
                // Hiển thị dữ liệu
                document.querySelector('#trafficData').classList.remove('d-none');
                document.querySelector('.spinner-border').classList.add('d-none');
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Không thể tải dữ liệu lưu lượng. Vui lòng thử lại sau.');
            });
    });
    
    // Xử lý modal config
    var configModal = document.getElementById('configModal');
    configModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        var interfaceName = button.getAttribute('data-interface');
        var modalTitle = configModal.querySelector('.modal-title');
        modalTitle.textContent = 'Cấu Hình Giao Diện: ' + interfaceName;
        
        // Đặt tên giao diện vào form
        document.getElementById('interfaceName').value = interfaceName;
        
        // TODO: Lấy thông tin cấu hình hiện tại từ API
    });
    
    // Xử lý nút lưu cấu hình
    document.getElementById('saveInterfaceConfig').addEventListener('click', function() {
        alert('Chức năng này đang được phát triển');
        var modal = bootstrap.Modal.getInstance(configModal);
        modal.hide();
    });
    
    // Hàm định dạng bytes
    function formatBytes(bytes, decimals = 2) {
        if (bytes === 0) return '0 Bytes';
        
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
        
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }
    
    // Auto refresh mỗi 60 giây
    setTimeout(function() {
        window.location.reload();
    }, 60000);
</script>
}
